#!/bin/bash
#
# build
# Bash script to clean out compile output during pdf generation from LaTeX file
# Author: Andrea Giacomo Baldan
# Version: 1.1
source /usr/bin/lib.sh
DIR=RP
# delete all pdflatex compilation files except .pdf
delete_garbage() {
    readonly GARBAGE="*.log *.aux *.toc *.out *.soc" # all bloating stuff generated by pdflatex
    for file in $GARBAGE; do
        garbage_collection=$(find . -type f -name "$file")
        for garb in $garbage_collection; do
            rm -f $garb
        done
        trash=$(c() { echo $#; }; c $garbage_collection )
        echo "[*] Deleted $trash $file files."
    done
}

if [ $# -eq 0 ]; then
    files=$(find $DIR -type f -name "*.tex")
    totalTex=$(c() { echo $#; }; c $files )
    # echo -e "\e[1m\n[*] Found \e[32m$totalTex\e[39m .tex files in current directory. Proceed?[y/n]\e[0m"
	set_bold; echo -ne "\n[*] Found "; set_green; echo -ne "$totalTex"; reset_color; echo " .tex files in current directory. Proceed?[y/n]"; reset_text;
    read choice
    case "$choice" in
        y|Y)for i in 1 2; do
                for file in $files; do
                    output=$(pdflatex -halt-on-error -file-line-error $file 2>&1)
                    exitcode=$?
                    # errors=$(echo $output | grep --color=always -E "error:|.*:[0-9]+:.*" -a1)
					errors=$(echo $output | grep --color=always -E "Error:|Warning:|Missing:|$")
                    if [[ $exitcode != "0" ]]; then
                        set_bold; echo -ne "[!] Compilation errors occurred"; reset_text;
                        echo "$errors"
                        exit 1
                    fi
                done
            done
            delete_garbage;;
        n|N) exit 1;;
    esac
else
    for i in 1 2; do
        for var in "$@"; do
            output=$(pdflatex -halt-on-error -file-line-error $var 2>&1)
            exitcode=$?
            # errors=$(echo $output | grep --color=always -E "error:|.*:[0-9]+:.*" -a1)
			errors=$(echo $output | grep --color=always -E "Error:|Warning:|Missing:|$")
            if [[ $exitcode != "0" ]]; then
                set_bold; echo -ne "[!] Compilation errors occurred"; reset_text;
                echo "$errors"
                exit 1
            fi
        done
    done
    # deleting all unwanted stuff
    delete_garbage
fi
set_bold; echo -ne "\n[*] All PDF has been correctly generated\n"; reset_text;
